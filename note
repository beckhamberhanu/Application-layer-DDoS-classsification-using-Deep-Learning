Tasks

Below are the overall tasks to carry out the job. We literally follow the step given in the below link, however our approach is completely different.         

https://github.com/Ahamasaleh/Deep-learning-for-intrusion-detection-using-Recurrent-Neural-network-RNN/blob/f91edfc24506bad8bad462f6637699bc3e6aa9e3/KDDTest+_Binary_Classification.ipynb


1 - undersample, oversample and merge

My advisor told me that I need to merge the datasets. 
There are five separate attack datasets with their corresponding normal(benign) traffic (DNS, LDAP, SNMP, NTP, and TFTP)
    
Their total instances or number of rows are as follows:
    
   
				DNS                TFTP             LDAP             SNMP                   NTP               Total
								
Total Instances/rows		 5,074,414	    20,107,828	    2,181,543	    5,161,378     	1,217,008   	 	33,742,171
								
DDoS Instances		        5,071,011	    20,082,580     	2,179,930	    5,159,870	      1,202,642	    	33,696,033
								
Benign Instances	        3,402	        25,247	        1,612	        1,507	           14,365	       	46,133
   
			 					

The thing is we need to forget about undersampling and oversampling because we do not need to balance each datasets.

We need only one csv file for multiclass classification, totalling 120,000 instances/rows from the total of 33,742,171. 

Accordingly, we need 100,000 attacks (20,000 instances from each (DNS, LDAP, SNMP, NTP, and TFTP) and only 20,000 benign by taking 4000 benign traffic from each protocol)    



Thus, the new dataset will have 
                  
                                 DNS	           TFTP	            LDAP	        SNMP	        NTP         		Total
								
DDoS after sampling 		 20,000	          20,000           20000	       20000	         20000		      100000
								
Benign after sampling		 4,000	         4000	            4000	       4000         	4000	         	20000
    

So, what we need to do is write a code that randomly picks 20,000 attack rows from 5 csv files and 4,000 Benign from 5 csv files.   


Finally, merge the 10 csv files.      


2 - split for testing and training

3 -  One-Hot-Encoding is used to convert all categorical properties to binary properties.

4 - The dataset was divided into separate datasets for each attack category. Attack tags have been renamed for each. 0 = Normal, 1 = DoS, 2 = Probe, 3 = R2L, 4 = U2R. In the new datasets, the tag column has been replaced with the new values.

5 - build the model (LSTM, BiLSTM, d/t CNNs, residual netwks)

6 - Optimization

